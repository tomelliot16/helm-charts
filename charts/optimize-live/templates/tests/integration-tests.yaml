---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stormforge-tests
  namespace: stormforge-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: stormforge-tests
  namespace: stormforge-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - watch
  - patch
  - list
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - watch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - get
  - watch
  - patch
  - list
  - create
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  verbs:
  - list
- apiGroups:
  - argoproj.io
  resources:
  - rollouts
  verbs:
  - create
  - get
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - list
  - get
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stormforge-tests
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - serviceaccounts
  verbs:
  - get
  - watch
  - patch
  - list
  - create
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - watch
  - patch
  - list
  - create
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
- apiGroups:
  - ""
  - metrics.k8s.io
  resources:
  - nodes
  verbs:
  - list
  - get
- apiGroups:
  - kubernetes-client.io
  resources:
  - externalsecrets
  verbs:
  - get
  - watch
  - list
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: stormforge-tests
  namespace: stormforge-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: stormforge-tests
subjects:
- kind: ServiceAccount
  name: stormforge-tests
  namespace: stormforge-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stormforge-tests
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: stormforge-tests
subjects:
- kind: ServiceAccount
  name: stormforge-tests
  namespace: stormforge-system
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: cpu-deployment
  namespace: stormforge-system
spec:
  templates:
  - name: create-deployment
    retryStrategy:
      limit: "2"
      retryPolicy: OnTransientError
    resource:
      action: create
      manifest: |
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: cpu
          namespace: stormforge-system
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: cpu-stress
          template:
            metadata:
              labels:
                app: cpu-stress
            spec:
              containers:
              - name: cpu-container
                image: severalnines/sysbench
                imagePullPolicy: IfNotPresent
                resources:
                  requests:
                    cpu: 2000m
                    memory: 64Mi
                command:
                  - sysbench
                  - cpu
                  - --threads=1
                  - --time=0
                  - run
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: optimize-live
  namespace: stormforge-system
spec:
  templates:
  - name: check-apply
    script:
      command:
      - bash
      image: argoproj/argoexec:v3.1.6
      imagePullPolicy: IfNotPresent
      source: |
        for i in {1..5}; do
          sleep 60
          CPU_REQUESTS = $(kubectl get pod -n stormforge-system -l app=cpu-stress -o=jsonpath='{.items..resources.requests.cpu}')
          if [[ $CPU_REQUESTS != 2 ]]; then
            exit 0
          fi
        done
        exit 1
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: utils
  namespace: stormforge-system
spec:
  templates:
  - name: delete-deployment
    script:
      command:
      - bash
      image: argoproj/argoexec:v3.1.6
      imagePullPolicy: IfNotPresent
      source: kubectl delete deployment cpu -n stormforge-system
      